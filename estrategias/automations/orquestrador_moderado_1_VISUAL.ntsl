{==============================================================================
  ESTUDO VISUAL - ORQUESTRADOR MODERADO
  
  Versão: 1.0
  Autor: Gemini (assistente Trader-Dev NTSL)
  
  Descrição:
  Este estudo plota os sinais e indicadores do robô "orquestrador_moderado.txt".
  - "L", "P", "B": Sinais individuais de Larry Williams, Primeira Barra e Bollinger.
  - "C" / "V": Sinal final do orquestrador, quando o score atinge o limiar.
==============================================================================}

Input
  // -------- ORQUESTRADOR E PESOS --------
  scoreMinimoEntrada(0.5);
  peso_LarryWilliams(0.4);
  peso_PrimeiraBarra(0.3);
  peso_Bollinger(0.3);

  // -------- PARÂMETROS DAS ESTRATÉGIAS INTERNAS --------
  lw_mediaTendencia(20);
  lw_mediaSinal(3);
  pb_horaInicio(0900);
  pb_horaFim(0915);
  bb_periodo(20);
  bb_desvio(2.0);
  bb_tipoMedia(0);

  // -------- VISUAL --------
  plotarIndicadores(True);
  plotarSinaisIndividuais(True);
  plotarSinalOrquestrado(True);

Var
  // --- Variáveis de Estado ---
  ultimoDia: Integer;
  maximaPrimeiraBarra, minimaPrimeiraBarra: Float;
  primeiraBarraDefinida: Boolean;

  // --- Variáveis de Indicadores para Plotagem ---
  lw_tendencia_val: Float;
  bb_sup_val, bb_inf_val: Float;
  horaAtual: Integer;
  sinalLW, sinalPB, sinalBB: Integer;
  scoreCompra, scoreVenda: Float;
  // Variáveis locais para cálculo
  lw_mediaSinalCompra, lw_mediaSinalVenda: Float;

// ======== FUNÇÕES DE SINAL (REPLICADAS DA AUTOMAÇÃO) ========

function Sinal_LarryWilliams(pTendenciaVal: Float; pMediaSinalCompra: Float; pMediaSinalVenda: Float): Integer;
begin
  if (Close > pTendenciaVal) and (Low < pMediaSinalCompra) then
    Result := 1
  else if (Close < pTendenciaVal) and (High > pMediaSinalVenda) then
    Result := -1
  else
    Result := 0;
end;

function Sinal_PrimeiraBarra(pMaxPB: Float; pMinPB: Float; pDefinida: Boolean; pStartTime: Integer): Integer;
begin
  if (not pDefinida) or (Time <= pStartTime) then
    Result := 0
  else
  begin
    if (High > pMaxPB) and (High[1] <= pMaxPB) then
      Result := 1
    else if (Low < pMinPB) and (Low[1] >= pMinPB) then
      Result := -1
    else
      Result := 0;
  end;
end;

function Sinal_BollingerBreakout(pBandaSup: Float; pBandaInf: Float): Integer;
begin
  if (Close > pBandaSup) then
    Result := 1
  else if (Close < pBandaInf) then
    Result := -1
  else
    Result := 0;
end;

// ======== BLOCO PRINCIPAL DE EXECUÇÃO ========
begin

  // --- Reset Diário ---
  if (Date <> ultimoDia) then
  begin
    ultimoDia := Date;
    primeiraBarraDefinida := False;
    maximaPrimeiraBarra := 0.0;
    minimaPrimeiraBarra := 999999.0;
  end;

  // --- Lógica da Primeira Barra ---
  horaAtual := Time;
  if (horaAtual >= pb_horaInicio) and (horaAtual <= pb_horaFim) then
  begin
    if (High > maximaPrimeiraBarra) then maximaPrimeiraBarra := High;
    if (Low < minimaPrimeiraBarra) then minimaPrimeiraBarra := Low;
  end;
  if (horaAtual > pb_horaFim) and (not primeiraBarraDefinida) and (maximaPrimeiraBarra > 0) then
  begin
    primeiraBarraDefinida := True;
  end;

  // --- 1. CALCULAR TODOS OS VALORES DE INDICADORES ---
  lw_tendencia_val := Media(lw_mediaTendencia, Close);
  lw_mediaSinalCompra := Media(lw_mediaSinal, Low);
  lw_mediaSinalVenda := Media(lw_mediaSinal, High);
  bb_sup_val := BollingerBands(bb_desvio, bb_periodo, bb_tipoMedia)|0|;
  bb_inf_val := BollingerBands(bb_desvio, bb_periodo, bb_tipoMedia)|1|;

  // --- 2. COLETAR SINAIS DAS FUNÇÕES ---
  sinalLW := Sinal_LarryWilliams(lw_tendencia_val, lw_mediaSinalCompra, lw_mediaSinalVenda);
  sinalPB := Sinal_PrimeiraBarra(maximaPrimeiraBarra, minimaPrimeiraBarra, primeiraBarraDefinida, pb_horaInicio);
  sinalBB := Sinal_BollingerBreakout(bb_sup_val, bb_inf_val);

  // --- 3. PLOTAR SINAIS INDIVIDUAIS ---
  if (plotarSinaisIndividuais) then
  begin
    if (sinalLW = 1) then PlotText("L", clGreen, 0, 8, Low - (AvgTrueRange(14,0) * 0.2));
    if (sinalLW = -1) then PlotText("L", clRed, 0, 8, High + (AvgTrueRange(14,0) * 0.2));
    if (sinalPB = 1) then PlotText("P", clGreen, 0, 8, Low - (AvgTrueRange(14,0) * 0.4));
    if (sinalPB = -1) then PlotText("P", clRed, 0, 8, High + (AvgTrueRange(14,0) * 0.4));
    if (sinalBB = 1) then PlotText("B", clGreen, 0, 8, Low - (AvgTrueRange(14,0) * 0.6));
    if (sinalBB = -1) then PlotText("B", clRed, 0, 8, High + (AvgTrueRange(14,0) * 0.6));
  end;

  // --- 4. CALCULAR SCORE E PLOTAR SINAL DO ORQUESTRADOR ---
  scoreCompra := 0; scoreVenda := 0;
  if (sinalLW = 1) then scoreCompra := scoreCompra + peso_LarryWilliams;
  if (sinalLW = -1) then scoreVenda := scoreVenda + peso_LarryWilliams;
  if (sinalPB = 1) then scoreCompra := scoreCompra + peso_PrimeiraBarra;
  if (sinalPB = -1) then scoreVenda := scoreVenda + peso_PrimeiraBarra;
  if (sinalBB = 1) then scoreCompra := scoreCompra + peso_Bollinger;
  if (sinalBB = -1) then scoreVenda := scoreVenda + peso_Bollinger;

  if (plotarSinalOrquestrado) then
  begin
    if (scoreCompra >= scoreMinimoEntrada) and (scoreCompra > scoreVenda) then
      PlotText("C", clLime, 0, 14, Low - (AvgTrueRange(14,0)))
    else if (scoreVenda >= scoreMinimoEntrada) and (scoreVenda > scoreCompra) then
      PlotText("V", clFuchsia, 0, 14, High + (AvgTrueRange(14,0)));
  end;

  // --- 5. PLOTAR LINHAS DOS INDICADORES ---
  if (plotarIndicadores) then
  begin
    Plot(lw_tendencia_val);
    SetPlotColor(1, clYellow);
    Plot2(bb_sup_val);
    SetPlotColor(2, clRed);
    Plot3(bb_inf_val);
    SetPlotColor(3, clRed);
    if (primeiraBarraDefinida) then
    begin
      Plot4(maximaPrimeiraBarra);
      SetPlotColor(4, clBlue);
      Plot5(minimaPrimeiraBarra);
      SetPlotColor(5, clBlue);
    end;
  end;
end;