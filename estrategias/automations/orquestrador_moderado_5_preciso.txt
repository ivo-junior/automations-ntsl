{==============================================================================
  AUTOMAÇÃO COMPOSTA (ORQUESTRADOR) - PERFIL MODERADO
  
  Versão: 6.0 (Lógica de Filtros Sinergicos - ADX, RSI, Tendencia)
  Autor: Gemini (assistente Trader-Dev NTSL)
==============================================================================}

Input
  // -------- IDENTIFICAÇÃO --------
  numeroMagico(202406);
  nomeEstrategia("ORQUESTRADOR_MODERADO_6_SINERGICO");

  // -------- ATIVO (CONFIGURAR MANUALMENTE) --------
  pontosPorTick(0.2);
  custoPorContrato(0.85);

  // -------- MOTOR DE RISCO GLOBAL --------
  riscoMaximoDiario(300.0);
  lucroMaximoDiario(600.0);
  maxTradesPorDia(15);
  maxLossConsecutivo(3);
  
  // -------- GESTÃO DE SESSÃO E HORÁRIOS --------
  usarJanelaHoraria(True);
  horaInicioGlobal(0905);
  horaFimGlobal(1745);
  horaEncerramento(1750);

  // -------- ORQUESTRADOR E PESOS --------
  scoreMinimoEntrada(0.5);
  peso_LarryWilliams(0.4);
  peso_PrimeiraBarra(0.3);
  peso_Bollinger(0.3);

  // -------- GESTÃO DE TRADE (POR OPERAÇÃO) --------
  contratosPorOperacao(1);
  usarStopLoss(True);
  fatorAtrStop(2.0);
  usarStopGain(True);
  fatorAtrGain(3.0);
  usarBreakEven(True);
  gatilhoBreakevenAtr(0.8);
  usarTrailingStop(True);
  gatilhoTrailingAtr(1.5);
  distanciaTrailingAtr(1.2);

  // -------- PARÂMETROS DAS ESTRATÉGIAS INTERNAS --------
  lw_mediaTendencia(20);
  lw_mediaSinal(3);
  pb_horaInicio(0900);
  pb_horaFim(0915);
  bb_periodo(20);
  bb_desvio(2.0);
  bb_tipoMedia(1);

  // -------- FILTROS GERAIS DE ENTRADA --------
  usarFiltroTendencia(True);
  filtro_tendencia_periodo(50);
  usarFiltroADX(True);      // Filtro de força da tendência
  adx_periodo(14);
  adx_nivel_minimo(20);
  usarFiltroRSI(True);      // Lógica de veto em exaustão com RSI
  rsi_periodo(14);
  rsi_nivel_sobrecompra(70);
  rsi_nivel_sobrevenda(30);
  filtro_volatilidade_atrPeriodo(14);
  filtro_spreadMaximoTicks(999); // Filtro desativado

Var
  // --- Variáveis de Estado (Persistem entre os candles) ---
  ultimoDia, tradesHoje, lossConsecutivo: Integer;
  bloqueadoMeta, bloqueadoLossConsec, posicaoAberta: Boolean;
  resultadoDiario, resultadoUltimoTrade: Float;
  precoEntrada, precoStopLoss, precoStopGain, precoTrailingStop: Float;
  maximaPrimeiraBarra, minimaPrimeiraBarra: Float;
  primeiraBarraDefinida, pb_trade_hoje: Boolean;

  // --- Variáveis de Loop (movidas para global) ---
  horaAtual: Integer;
  atr_trade: Float;
  sinalLW, sinalPB, sinalBB: Integer;
  scoreCompra, scoreVenda: Float;
  podeEntrar: Boolean;
  novoTrailing: Float;
  mediaLonga: Float;
  adx_valor, rsi_valor: Float;
  scoreMinimoEntrada_var: Float;

// ======== FUNÇÕES DE SINAL========

function Sinal_LarryWilliams(pMediaTend: Integer; pMediaSinal: Integer): Integer;
var
  tendencia, mediaSinalCompra, mediaSinalVenda: Float;
begin
  tendencia := XAverage(pMediaTend, Close); 
  mediaSinalCompra := Media(pMediaSinal, Low);
  mediaSinalVenda := Media(pMediaSinal, High);
  if (Close > tendencia) and (Low < mediaSinalCompra) then
    Result := 1
  else if (Close < tendencia) and (High > mediaSinalVenda) then
    Result := -1
  else
    Result := 0;
end;

function Sinal_PrimeiraBarra(pMaxPB: Float; pMinPB: Float; pDefinida: Boolean; pStartTime: Integer; pTradeJaFeito: Boolean): Integer;
begin
  if (pTradeJaFeito) then Result := 0;   
  if (not pDefinida) or (Time <= pStartTime) then
    Result := 0
  else
  begin
    if (High > pMaxPB) then Result := 1
    else if (Low < pMinPB) then Result := -1
    else Result := 0;
  end;
end;

function Sinal_BollingerBreakout(pPeriodo: Integer; pDesvio: Float; pTipo: Integer): Integer;
var
  bandaSup, bandaInf: Float;
begin
  bandaSup := BollingerBands(pDesvio, pPeriodo, pTipo)|0|;
  bandaInf := BollingerBands(pDesvio, pPeriodo, pTipo)|1|;
  if (Close > bandaSup) then Result := 1
  else if (Close < bandaInf) then Result := -1
  else Result := 0;
end;

// ======== BLOCO PRINCIPAL DE EXECUÇÃO ========
begin
  // --- 0. INICIALIZAÇÃO DE VARIÁVEIS ---
  scoreMinimoEntrada_var := scoreMinimoEntrada;

  // --- 1. LÓGICAS DE INICIALIZAÇÃO E TRANSIÇÃO DE BARRA ---
  if (Date <> ultimoDia) then
  begin
    ultimoDia := Date;
    tradesHoje := 0;
    lossConsecutivo := 0;
    resultadoDiario := 0.0;
    bloqueadoMeta := False;
    bloqueadoLossConsec := False;
    primeiraBarraDefinida := False;
    pb_trade_hoje := False;
    maximaPrimeiraBarra := 0.0;
    minimaPrimeiraBarra := 999999.0;
  end;

  if (posicaoAberta and (Position() = 0)) then
  begin
    posicaoAberta := False;
    resultadoUltimoTrade := OpenResult() * pontosPorTick - custoPorContrato;
    resultadoDiario := resultadoDiario + resultadoUltimoTrade;
    if (resultadoUltimoTrade < 0) then
      lossConsecutivo := lossConsecutivo + 1
    else
      lossConsecutivo := 0;
  end;

  // --- 2. MOTOR DE RISCO GLOBAL E GESTÃO DE SESSÃO ---
  horaAtual := Time;
  if (horaAtual >= horaEncerramento) and (Position() <> 0) then ClosePosition();
  if (not bloqueadoMeta) then
  begin
    if ((lucroMaximoDiario > 0) and (resultadoDiario >= lucroMaximoDiario)) then bloqueadoMeta := True;
    if ((riscoMaximoDiario > 0) and (resultadoDiario <= -riscoMaximoDiario)) then bloqueadoMeta := True;
  end;
  if (lossConsecutivo >= maxLossConsecutivo) and (not bloqueadoLossConsec) then
    bloqueadoLossConsec := True;

  // --- 3. LÓGICA DE ESTRATÉGIAS E SINAIS ---
  if (horaAtual >= pb_horaInicio) and (horaAtual <= pb_horaFim) then
  begin
    if (High > maximaPrimeiraBarra) then maximaPrimeiraBarra := High;
    if (Low < minimaPrimeiraBarra) then minimaPrimeiraBarra := Low;
  end;
  if (horaAtual > pb_horaFim) and (not primeiraBarraDefinida) and (maximaPrimeiraBarra > 0) then
    primeiraBarraDefinida := True;

  // --- 4. GESTÃO DE POSIÇÃO E ENTRADAS ---
  if (posicaoAberta) then
  begin
    atr_trade := AvgTrueRange(filtro_volatilidade_atrPeriodo, 0);
    if (usarBreakEven) then
    begin
      if (Position() > 0) and (Close >= precoEntrada + (atr_trade * gatilhoBreakevenAtr)) and (precoStopLoss < precoEntrada) then precoStopLoss := precoEntrada;
      if (Position() < 0) and (Close <= precoEntrada - (atr_trade * gatilhoBreakevenAtr)) and (precoStopLoss > precoEntrada) then precoStopLoss := precoEntrada;
    end;
    if (usarTrailingStop) then
    begin
      if (Position() > 0) and (Close >= precoEntrada + (atr_trade * gatilhoTrailingAtr)) then
      begin
        novoTrailing := Close - (atr_trade * distanciaTrailingAtr);
        if (novoTrailing > precoTrailingStop) then precoTrailingStop := novoTrailing;
      end
      else if (Position() < 0) and (Close <= precoEntrada - (atr_trade * gatilhoTrailingAtr)) then
      begin
        novoTrailing := Close + (atr_trade * distanciaTrailingAtr);
        if (novoTrailing < precoTrailingStop) then precoTrailingStop := novoTrailing;
      end;
    end;
    if (Position() > 0) and ((usarStopLoss and (Close <= precoStopLoss)) or (usarStopGain and (Close >= precoStopGain)) or (usarTrailingStop and (Close <= precoTrailingStop))) then
      ClosePosition()
    else if (Position() < 0) and ((usarStopLoss and (Close >= precoStopLoss)) or (usarStopGain and (Close <= precoStopGain)) or (usarTrailingStop and (Close >= precoTrailingStop))) then
      ClosePosition();
  end
  else if (not bloqueadoMeta) and (not bloqueadoLossConsec) and (tradesHoje < maxTradesPorDia) and ((not usarJanelaHoraria) or ((horaAtual >= horaInicioGlobal) and (horaAtual < horaFimGlobal))) then
  begin
    podeEntrar := True;

    // FILTRO 1: Força da Tendência com ADX
    if (usarFiltroADX) then
    begin
      adx_valor := ADX(adx_periodo, 1); // 1 = Média Exponencial
      if (adx_valor < adx_nivel_minimo) then
        podeEntrar := False;
    end;

    if (podeEntrar) then
    begin
      // --- CÁLCULO DE SINAIS E SCORES ---
      sinalLW := Sinal_LarryWilliams(lw_mediaTendencia, lw_mediaSinal);
      sinalPB := Sinal_PrimeiraBarra(maximaPrimeiraBarra, minimaPrimeiraBarra, primeiraBarraDefinida, pb_horaInicio, pb_trade_hoje);
      sinalBB := Sinal_BollingerBreakout(bb_periodo, bb_desvio, bb_tipoMedia);

      scoreCompra := 0; scoreVenda := 0;
      if (sinalLW = 1) then scoreCompra := scoreCompra + peso_LarryWilliams;
      if (sinalLW = -1) then scoreVenda := scoreVenda + peso_LarryWilliams;
      if (sinalPB = 1) then scoreCompra := scoreCompra + peso_PrimeiraBarra;
      if (sinalPB = -1) then scoreVenda := scoreVenda + peso_PrimeiraBarra;
      if (sinalBB = 1) then scoreCompra := scoreCompra + peso_Bollinger;
      if (sinalBB = -1) then scoreVenda := scoreVenda + peso_Bollinger;

      // --- LÓGICA DE FILTROS EM SINERGIA ---

      // FILTRO 2: Veto de Exaustão com RSI
      if (usarFiltroRSI) then
      begin
        rsi_valor := RSI(rsi_periodo, 1);
        if (rsi_valor >= rsi_nivel_sobrecompra) then scoreCompra := 0; // VETA compra
        if (rsi_valor <= rsi_nivel_sobrevenda) then scoreVenda := 0;  // VETA venda
      end;

      // FILTRO 3: Veto de Direção da Tendência com Média Longa
      if (usarFiltroTendencia) then
      begin
        mediaLonga := XAverage(filtro_tendencia_periodo, Close);
        if (Close < mediaLonga) then scoreCompra := 0; // Veta compras abaixo da média
        if (Close > mediaLonga) then scoreVenda := 0;  // Veta vendas acima da média
      end;

      // --- EXECUÇÃO DA ORDEM ---
      atr_trade := AvgTrueRange(filtro_volatilidade_atrPeriodo, 0);

      if (scoreCompra >= scoreMinimoEntrada_var) and (scoreCompra > scoreVenda) then
      begin
        BuyAtMarket(contratosPorOperacao);
        precoEntrada := Close;
        precoStopLoss := precoEntrada - (atr_trade * fatorAtrStop);
        precoStopGain := precoEntrada + (atr_trade * fatorAtrGain);
        precoTrailingStop := precoStopLoss;
        posicaoAberta := True;
        tradesHoje := tradesHoje + 1;
        if (sinalPB <> 0) then pb_trade_hoje := True;
      end
      else if (scoreVenda >= scoreMinimoEntrada_var) and (scoreVenda > scoreCompra) then
      begin
        SellShortAtMarket(contratosPorOperacao);
        precoEntrada := Close;
        precoStopLoss := precoEntrada + (atr_trade * fatorAtrStop);
        precoStopGain := precoEntrada - (atr_trade * fatorAtrGain);
        precoTrailingStop := precoStopLoss;
        posicaoAberta := True;
        tradesHoje := tradesHoje + 1;
        if (sinalPB <> 0) then pb_trade_hoje := True;
      end;
    end;
  end;
end;